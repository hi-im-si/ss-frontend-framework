// Notice
$notification: "notification";
$dimensions: 40;

.#{$notification} {
	position: relative;
	padding: 5px;
	margin: 20px 0;
	color: $color--white;
	@include font-size($base-font-size);

	&__body {
		display: block;
		margin: 0;
		padding: 5px 20px 5px 50px;
	}

	&__icon {
		@include _position(absolute, 0, null, 0, 0);
		height: 100%;
		width: #{$dimensions}px;
		@include font-size($dimensions/2, $dimensions);
		text-align: center;
	}

	&__close {
		@include _position(absolute, 2px, 2px, null, null);
		width: #{$dimensions/2}px;
		height: #{$dimensions/2}px;
		overflow: hidden;
		cursor: pointer;
		@include backface-visibility(hidden);
		text-align: center;

		&:before {
			content: "\2715";
		}
	}


	$notifications: (
		success: (
			bg: $color--success,
			icon: "\2713"
		),
		info: (
			bg: $color--info,
			icon: "\2139"
		),
		notice: (
			bg: $color--notice,
			icon: "\26A0"
		),
		error: (
			bg: $color--error,
			icon: "\2715"
		)
	);

	// Alert Variations
	@each $class, $theme in $notifications {

		&--#{$class} {
			background-color: map-get($theme, bg);

			.#{$notification}__icon {
				background-color: darken(map-get($theme, bg), 15%);

				&:before {
					content: map-get($theme, icon);
				}

			}

		}

	}

	// 	<div class="notification  notification--success|error|info|notice  notification--growl  is-hid  js-notify" data-notify-anim="bounce|scale|slide">
	// 		<p class="notification__body">Hello there! I am a Notification.</p>
	// 		<span class="notification__close  js-notify-close"><i class="icon-close"></i></span>
	// 	</div>

	&--growl {
		@include _position(fixed, 0, null, null, 20px, 1000);
		max-width: 300px;
		border-radius: 5px;
		pointer-events: none;
		@include transition(0.5s $easeInOut all);

		.#{$notification}__body {
			padding: 15px 5px;
			text-transform: none;
			font-weight: normal;
		}

		&.is-vis {
			pointer-events: auto;
			opacity: 1;
			visibility: visible;
		}
		&.is-hid {
			opacity: 0;
			visibility: hidden;
		}




		&[data-notify-anim="scale"] {
			&.is-vis {
				@include animation(animScale, center center, 0.25s, $easeInOut, 0, 1, normal);
			}
			&.is-hid {
				@include animation(animFade, center center, 0.25s, $easeInOut, 0, 1, reverse);
			}
		}
		&[data-notify-anim="bounce"] {
			&.is-vis {
				@include animation(animBounce, center center, 1s, linear, 0, 1, normal);
			}
			&.is-hid {
				@include animation(animFade, center center, 0.3s, linear, 0, 1, reverse);
			}
		}
		&[data-notify-anim="slide"] {
			&.is-vis {
				@include animation(animSlideElastic, center center, 1s, $easeInOut, 0, 1, normal);
			}
			&.is-hid {
				@include transform(translateX(-200%));
				@include animation(animSlide, center center, 0.2s, linear, 0, 1, normal);
			}
		}

	}

}



@include keyframe(animScale) {
	0% { opacity: 0; visibility: hidden; transform: translate3d(0,40px,0) scale3d(0.1,0.6,1); }
	100% { opacity: 1; visibility: visible; transform: translate3d(0,0,0) scale3d(1,1,1); }
}

@include keyframe(animFade) {
	0% { opacity: 0; visibility: hidden; }
	100% { opacity: 1; visibility: visible; }
}

@include keyframe(animBounce) {
	0% 		{ transform: matrix3d(0.7, 0, 0, 0, 0, 0.7, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
	3.4% 	{ transform: matrix3d(0.795, 0, 0, 0, 0, 0.822, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
	4.7% 	{ transform: matrix3d(0.835, 0, 0, 0, 0, 0.88, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
	6.81% 	{ transform: matrix3d(0.898, 0, 0, 0, 0, 0.968, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
	9.41% 	{ transform: matrix3d(0.965, 0, 0, 0, 0, 1.05, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
	10.21% 	{ transform: matrix3d(0.982, 0, 0, 0, 0, 1.068, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
	13.61% 	{ transform: matrix3d(1.037, 0, 0, 0, 0, 1.1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
	14.11% 	{ transform: matrix3d(1.042, 0, 0, 0, 0, 1.099, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
	17.52% 	{ transform: matrix3d(1.062, 0, 0, 0, 0, 1.072, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
	18.72% 	{ transform: matrix3d(1.064, 0, 0, 0, 0, 1.056, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
	21.32% 	{ transform: matrix3d(1.059, 0, 0, 0, 0, 1.021, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
	24.32% 	{ transform: matrix3d(1.045, 0, 0, 0, 0, 0.988, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
	25.23% 	{ transform: matrix3d(1.04, 0, 0, 0, 0, 0.981, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
	29.03% 	{ transform: matrix3d(1.019, 0, 0, 0, 0, 0.969, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
	29.93% 	{ transform: matrix3d(1.014, 0, 0, 0, 0, 0.97, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
	35.54% 	{ transform: matrix3d(0.994, 0, 0, 0, 0, 0.989, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
	36.74% 	{ transform: matrix3d(0.991, 0, 0, 0, 0, 0.994, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
	41.04% 	{ transform: matrix3d(0.988, 0, 0, 0, 0, 1.007, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
	44.44% 	{ transform: matrix3d(0.99, 0, 0, 0, 0, 1.01, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
	52.15% 	{ transform: matrix3d(0.997, 0, 0, 0, 0, 1.002, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
	59.86% 	{ transform: matrix3d(1.002, 0, 0, 0, 0, 0.997, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
	63.26% 	{ transform: matrix3d(1.002, 0, 0, 0, 0, 0.998, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
	75.28% 	{ transform: matrix3d(1, 0, 0, 0, 0, 1.001, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
	85.49% 	{ transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
	90.69% 	{ transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
	100% 	{ transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
}

@include keyframe(animSlideElastic) {
	0% 		{ transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, -1000, 0, 0, 1); }
	1.3% 	{ transform: matrix3d(1.83, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, -790.068, 0, 0, 1); }
	2.55% 	{ transform: matrix3d(2.015, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, -609.326, 0, 0, 1); }
	4.1% 	{ transform: matrix3d(1.864, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, -419.708, 0, 0, 1); }
	5.71% 	{ transform: matrix3d(1.583, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, -265.321, 0, 0, 1); }
	8.11% 	{ transform: matrix3d(1.234, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, -105.491, 0, 0, 1); }
	8.81% 	{ transform: matrix3d(1.166, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, -72.799, 0, 0, 1); }
	11.96% 	{ transform: matrix3d(1.01, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 16.084, 0, 0, 1); }
	12.11% 	{ transform: matrix3d(1.007, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 18.434, 0, 0, 1); }
	15.07% 	{ transform: matrix3d(0.985, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 42.205, 0, 0, 1); }
	16.12% 	{ transform: matrix3d(0.986, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 43.356, 0, 0, 1); }
	27.23% 	{ transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 7.839, 0, 0, 1); }
	27.58% 	{ transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 7.069, 0, 0, 1); }
	38.34% 	{ transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, -1.037, 0, 0, 1); }
	40.09% 	{ transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, -0.97, 0, 0, 1); }
	50% 	{ transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, -0.159, 0, 0, 1); }
	60.56% 	{ transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0.025, 0, 0, 1); }
	82.78% 	{ transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, -0.001, 0, 0, 1); }
	100% 	{ transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
}

@include keyframe(animSlide) {
	0% { transform: translateX(0); }
	100% { transform: translateX(-200%); }
}





